 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

rachelN -- 2019-04-02 14:22 
[s.py]
- s_board(in_f)
    - reads (just a board, for now) and converts to a 2D array 9 x 9
          - relaces '_' with 0s 
          - board (list(list))
    - rec - dictionary with a recording of all rows and columns a number (the key) is in, list of 0s and the number (indicates where it is) 
    - possible - dictionary with the rows and columns where the number could actually be
    - squares - each full square
	1 2 3
	4 5 6
	7 8 9 


rachelN -- 2019-04-09 10:54 
[stack.py]
- Stack(size=100) [fin]
    - can preallocate spaces 
    - push(data)
    - pop()
    - peek()
    - stack() - see entire stack

rachelN -- 2019-04-10 23:54 
[s.py]
- finding the rows and columns that don't contain certain numbers option 2 (electric boogaloo)
    - line 14 -- option 2
        rec_2 = dict([[i,[set([]),set([])]] for i in range(10)[1:]])
    - line 20 -- option 2
        r = 0
        while r < 9:
            c = 0
            while c < 9:
                n = board[r][c]
                    rs = r // 3 + 1
                cs = c // 3 + 1
                box = (rs - 1)* 3 + cs
                if n > 0:
                    rec_2[n][0].add(r)
                    rec_2[n][1].add(c)
                    print("\n")
                    print(n,"\t",box, r % 3, c % 3)
                    print(r % 3,c%3)
                    print(squares,"\n",squares[box],"\n",squares[box][r % 3],"\n",squares[box][r % 3][c % 3])
                c += 1
            r += 1
    - line 44 -- option 2
        for i in rec:
            rec_2[i][0] = list(set(range(9)) - rec_2[i][0])
            rec_2[i][1] = list(set(range(9)) - rec_2[i][1])
            rec_2[i][0].sort()
            rec_2[i][1].sort()
